--rolling 52 weeks high


WITH MAX_HIGH AS (
SELECT 
ROUND(MAX(HIGH)) AS MAX_HIGH
,TICKER 
FROM DBT_STAGING.STOCK_MARKET_ADITYA.YAHOO_STOCKS_BATCH_DATA
WHERE DATE>=CURRENT_DATE - (365*2)
GROUP BY 2),

INCLUDE_DATES AS
(SELECT 
M.TICKER
,B.DATE
,M.MAX_HIGH 
FROM 
DBT_STAGING.STOCK_MARKET_ADITYA.YAHOO_STOCKS_BATCH_DATA B
INNER JOIN
MAX_HIGH M
ON
ROUND(B.HIGH)=ROUND(M.MAX_HIGH)
AND
B.TICKER=M.TICKER)

SELECT DISTINCT * FROM INCLUDE_DATES ORDER BY TICKER ASC, DATE ASC;


--rolling 52 weeks low

WITH MIN_LOW AS (
SELECT 
ROUND(MIN(LOW)) AS MIN_LOW
,TICKER 
FROM DBT_STAGING.STOCK_MARKET_ADITYA.YAHOO_STOCKS_BATCH_DATA
WHERE DATE>=CURRENT_DATE - (365*2)
GROUP BY 2),

INCLUDE_DATES AS
(SELECT 
M.TICKER
,B.DATE
,M.MIN_LOW 
FROM 
DBT_STAGING.STOCK_MARKET_ADITYA.YAHOO_STOCKS_BATCH_DATA B
INNER JOIN
MIN_LOW M
ON
ROUND(B.LOW)=ROUND(M.MIN_LOW)
AND
B.TICKER=M.TICKER)

SELECT DISTINCT * FROM INCLUDE_DATES;





--Set target properties
{{ config(
    database='DBT_STAGING',
    pre_hook="ALTER EXTERNAL TABLE DBT_RAW.LANDING_ZONE.BATCH_DATA_STOCKS REFRESH" 
) }}

SELECT
DATE
,TICKER
,OPEN
,HIGH
,LOW
,CLOSE
,VOLUME
FROM
DBT_RAW.LANDING_ZONE.BATCH_DATA_STOCKS


{% macro generate_schema_name(custom_schema_name, node) -%}
    {%- set default_schema = target.schema -%}
    {%- if env_var('DBT_ENVIRONMENT') == 'dev' -%} 
       {{ custom_schema_name | trim }}_{{ default_schema }}
    {%- else -%}
        {{ custom_schema_name | trim }}
    {%- endif -%}
{%- endmacro %}









